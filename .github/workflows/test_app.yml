name: CI

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint application
        run: |
          flake8 app --max-line-length=120 --exclude=alembic

  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - "15432:5432"
        environment:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        volumes:
          - pgdata:/var/lib/postgresql/data
        healthcheck:
          test: ["CMD", "pg_isready", "-U", "test_user"]
          interval: 10s
          retries: 5
          timeout: 5s

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build services
        run: docker-compose build

      - name: Start containers
        run: docker-compose up -d
      
      - name: Check running containers
        run: docker ps

      - name: Wait for PostgreSQL to be ready
        run: |
          until docker-compose exec -T postgres pg_isready -U test_user; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Run migrations
        run: |
          docker-compose run --rm alembic alembic -c app/alembic.ini upgrade head

      - name: Run tests
        run: |
          docker-compose run --rm alembic pytest app --disable-warnings -v

      - name: Shut down Docker Compose
        run: docker-compose down -v
        
volumes:
  pgdata: