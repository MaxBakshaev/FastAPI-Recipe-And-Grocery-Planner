name: CI

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint application
        run: |
          flake8 app --max-line-length=120 --exclude=alembic

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Verify Docker Installation
        run: |
          docker --version
          docker-compose --version

      - name: Build services
        run: |
          docker-compose build
        continue-on-error: true

      - name: List all containers and their statuses
        run: docker-compose ps

      - name: List files inside app container
        run: |
          docker-compose exec app ls -l /app
          docker-compose exec app cat /app/wait-for-it.sh

      - name: Start containers
        run: |
          docker-compose up -d
        continue-on-error: true

      - name: Check if containers started successfully
        run: |
          docker-compose ps
          
      - name: Wait for PostgreSQL to be ready
        run: |
          until docker-compose exec -T postgres pg_isready -U test_user; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - name: Run tests
        run: |
          docker-compose run --rm alembic pytest app --disable-warnings -v

      - name: Shut down Docker Compose
        run: docker-compose down -v